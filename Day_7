StudyGroup Day 7!

#7. Card Divisibility
# https://www.acmicpc.net/problem/24924

L, R = map(int, input().split())   # 값 입력

start = L % 9   # 초기값 지정
total = start

for i in range((R-L) % 9):   # 일정 횟수만큼 반복
    start = (start + 1) % 9   # 해당 값의 나머지 구한 뒤 더하기
    total += start

print(total % 9)   # 출력

# 간단한 수학 문제.
# L부터 R까지의 수를 일렬로 나열해 붙였을 때, 이 수를 9로 나눴을 때 나머지를 구해야 하는데,
# 이는 결국 범위 L~R의 모든 수에 % 9 연산을 한 뒤 그 나머지를 더하는 것과 같지 않을까?
# (지금 생각해보니 내 가정이 틀렸다. 저 가정은 범위 내 수를 9로 나눈 나머지를 전부 더하는거지만,
#  문제는 범위 내 수를 일렬로 나열한 뒤 병합해 거대한 수 하나를 만들고 그걸 9로 나누는 거니까.
#  하지만 답이 맞았다는게 신기하네. 약간의 파악 후 새로 내린 옳은 정리는 이렇다.
#  어떤 수 n을 9로 나눴을 때 나머지가 r이라면, n*10^k의 나머지도 r이다. (k ≥ 1)
#  왜냐? n*10^k는 9*r*10^k-1 + ... + 9*r*10^0 + r로 나타낼 수 있거든.
#  마지막 항을 제외한 모든 항에 9가 들어가니, 해당 항들을 9로 나눈 나머지는 모두 0이고, r만 남게 된다.
#  n = 3이라고 치면, 30 = 27 + 3, 300 = 270 + 27 + 3... 같이. 지금 보니 r로 묶어줘도 되겠다. 9로 묶는게 더 좋으려나?
#  어쨌든! L부터 R까지의 수를 일렬로 나열해 붙인 큰 수는 사실
#  L(무지막지하게 많은 0) + L+1(엄청 많은 0) + L+2(꽤 많은 0) + ... + R이나 다름 없고,
#  그렇다면 각 항에 상술한 식을 적용시킬 수 있기 때문이다.)
# 어떤 수를 9로 나눴을 때 나올 수 있는 나머지는 0~8까지고, 이걸 전부 더하면 36. 9로 나누면 나머지는 0이 된다.
# 따라서 한 번 순환하면 실질적으로 나머지가 0인 것이나 마찬가지이므로,
# 시작 수의 나머지를 구해준 후, 수의 개수 % 9번만 반복해서 이를 적절히 구해주면 이 엄청나게 큰 수의 나머지를 구할 수 있다는 뜻이 된다.
# 그래서 했고, 시원하게 통과. 다른 문제도 이렇게 쉽고 빨리 풀리면 좋으련만...
# (챌린저 풀겠다고 몇 시간 넘게 고민한걸 이 문제에 10분 컷을 해버렸으니 생각이 많아질 수밖에.)
# 하지만 대충 불필요한 과정이 좀 있다는 건 어렴풋이 느끼고 있었다.
# 내 제출보다 2배 짧은 제출도 있었으니까. 그래도 보진 않겠다. 뭔가 획기적인 방법이 있겠지.



# 와 오늘 챌린저 문제 진짜 어렵다
# 난 백트래킹이라는 개념을 어렴풋이 알고만 있지,
# 사실 지금까지 본 모든 새 개념들이 다 어렴풋이 알고만 있거나 아예 모르던 것들이지만,
# 딱 한번 설명을 보면 이게 어디에 쓰이고, 무슨 절차로 동작하는지 다 이해가 됐는데
# 백트래킹은 전혀 그러지 못했다. 아 진짜 머리 터질 것 같네 그래서 이거 어떻게 하는 거에요????
# (문제에 주어진 판을 그래프 형식으로 구현하고 탐색까지 하는 것엔 성공했는데,
#  아무래도 최댓값을 찾는 과정에 큰 문제가 발생한 것 같다. 도저히 원하는 답이 안 나오네...)
# 그래서 관두고 미들러 문제를 보려고 했더니... 아 내가 풀었던 문제네 하 참
# (너비 우선 탐색을 이용해야 하는 문제인데, 이것도 개선해야 하긴 한다.
#  보통 너비 우선 탐색을 구현할 땐 큐를 사용한다는데, 나는 해시 맵 자료구조를 써서...
#  그래서 원래 대신 풀려고 했던 해당 문제 심화판인 숨바꼭질 2를 풀지 못했다. 이거라도 풀었어야 했는데...)
# 심지어 비기너 문제도 내가 전에 풀었던 문제다.
# (얄궂게도 해시 문제네. 하 참참...
#  해시라는 개념을 처음 배웠을 때가 생각난다. 저 때가 참 좋았지...
#  그래도 이거 하나 알게 된 뒤로 당시 풀 수 있는 문제의 범위가 확 넓어졌던게 기억난다.)
# 그래서 어찌할까 고민하다가 결국 솔브드에서 제공해주는 문제를 아무거나 하나 집어 풀었다. 오늘 문제 풀이 성공은 해야지...
# 그래도 간만에 수학 문제라 재미있었다. 그것도 보면 흥미로워지고 남들한테 수학에 관련된 흥미를 돋굴만한 재미있는 문제.
# 오늘 챌린저 문제도 나중에 풀 문제에 추가. ...과연 이 스터디 끝나기 전에 해결할 수 있을까...



# 참고 웹사이트
1. https://youngdroidstudy.tistory.com/entry/%EB%B0%B1%ED%8A%B8%EB%9E%98%ED%82%B9-%EB%B0%B1%ED%8A%B8%EB%9E%98%ED%82%B9%EC%9D%98-%EC%84%A4%EB%AA%85%EA%B3%BC-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%A0%9C%ED%92%80%EC%9D%B4
2. https://velog.io/@gayeong39/%EB%B0%B1%ED%8A%B8%EB%9E%98%ED%82%B9-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-BackTracking
3. https://chanhuiseok.github.io/posts/algo-23/

# 타 레벨 문제
B. https://www.acmicpc.net/problem/15829
M. https://www.acmicpc.net/problem/1697
C. https://www.acmicpc.net/problem/17825
