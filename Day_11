# StudyGroup Day 11!

# 11. 트리의 부모 찾기
# https://www.acmicpc.net/problem/11725

import sys
input = sys.stdin.readline
sys.setrecursionlimit(1000000)   # 재귀호출스택 최대치 변경

def DFS(i):   # 사용자 정의 깊이 우선 탐색 함수
    tree[i][0] = 1   # 탐색됨으로 전환
    
    for e in tree[i][1]:   # 자식 노드 순회
        if not tree[e][0]:   # 탐색되지 않은 노드라면
            their_parents[e] = str(i)   # 현재 노드 = 부모 노드를 저장하고
            DFS(e)   # 재귀 실행

N = int(input())
tree = [[0, []] for _ in range(N+1)]   # 값 입력 및 변수 생성
their_parents = ['0'] * (N+1)

for _ in range(N-1):
    a, b = map(int, input().split())   # 간선 입력

    tree[a][1].append(b)
    tree[b][1].append(a)

DFS(1)   # DFS 실행

print('\n'.join(their_parents[2:]))   # 출력

# 정점의 부모 노드를 출력해야 하는 문제.
# 뭐, 부모 노드나 자식 노드가 누구인지는 전체 탐색을 하는 과정 중 자연스레 알게 되니까...
# 그래서 탐색 과정에 부모 노드가 누군지 저장하게 했고, 1회만 전체 탐색하면 되니 그래프에 탐색 여부용 값도 할당해줬다.
# 아쉽게도 1트하진 못했는데, 재귀스택 제한에 걸려서... 간선이 최대 10만개 미만이라길래 10만으로 지정해줬는데 어림도 없었나보다.
# 그럼 100만 가야지 뭐. 이럴 줄 알았음 DFS 말고 BFS 할 걸 그랬나.



# 간만에 매운 문제로 돌아오니 힘드네. 설날에 너무 놀긴 놀았나보다.
# 그렇다고 문제 풀이를 게을리한건 아니지만... 사실 정리는 하나도 작성 안했다.
# 근... 10일은 밀린 것 같은데... 에휴. 언제 다시 작성하지?
# 원래대로라면 해당 부트캠프에서 제시해주는 문제 중 하나로 제출해보려고 했는데...
# 챌린저 문제는 보기만 해도 골이 타들어가는 N-Queen 문제라 강의 듣다가 정기 출석 시간 되서 날렸고,
# 보너스 문제는 시도도 제대로 못해봤고...
# (그래도 해설해주시는 거 들으니 해볼 자신이 생겼다. 다른 방법을 쓰면 조금 더 빨라질 것 같던데, 추후에 시도해봐야지.)
# 미들러 문제는 아주 한참 전에 이미 푼 문제라서 패스,
# 미들러 보너스 문제도 한 번 맛봤는데, 아무래도 이거 파이썬으로 해결하려면 난이도가 수직상승하는 모양이다.
# (시간을 줄이기 위한 탐색 횟수 감소 방안을 여럿 모색해봤는데, 음... 쉽지 않다.)
# 그래서 결국 백준 제공 서비스인 솔브드가 분류해준 클래스 4단계 문제 아무거나 하나 갖고 와서 10분만에 뚝딱 마무리했다.
# 적어도 6시 안엔 문제 하나를 풀고 싶었으니까... 도대체 또 나 몇시간을 고심한거람? 정기 모임이 8시부터였으니... 허 세상에
# 얼렁 자자... 미쳤지 아주 시간 남아도는 백수라고 몇 시간을 붙들고 앉아있는겨 지금




# 참고 웹사이트
1. 

# 타 레벨 문제
B. https://www.acmicpc.net/problem/10828
M. https://www.acmicpc.net/problem/1018
C. https://www.acmicpc.net/problem/9663
B-B. https://www.acmicpc.net/problem/25497
M-B. https://www.acmicpc.net/problem/1325
C-B. https://school.programmers.co.kr/learn/courses/30/lessons/60059
